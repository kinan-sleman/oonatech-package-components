import React, { useRef, useState } from "react";
import { Link } from "react-router-dom";

interface SystemSetting {
  id: number;
  transMenuValue?: string;
  title?: string;
  description: string;
  url: string;
  icon?: string; // Assuming icon is a string URL
  iconPath?: string; // Assuming icon is a string URL
  isActive?: boolean;
  isSystem?: boolean;
}

interface SettingsPopupProps {
  data: SystemSetting[] | undefined;
  settingsImg?: string | undefined;
  title?: string;
  highlightColor?: string;
}

const SettingsPopup: React.FC<SettingsPopupProps> = ({
  data,
  settingsImg,
  title,
  highlightColor,
}) => {
  const [show, setShow] = useState(false);
  const [hoverd, setHoverd] = useState(false);

  const timeoutRef = useRef<NodeJS.Timeout | null>(null);

  const handleMouseEnter = () => {
    if (timeoutRef.current) {
      clearTimeout(timeoutRef.current);
    }
    setShow(true);
  };

  const handleMouseLeave = () => {
    timeoutRef.current = setTimeout(() => {
      setShow(false);
    }, 100); // Delay before hiding
  };
  const handleClose = () => {
    setShow(false);
  };

  return (
    <div
      className="settingse_menu relative flex flex-col items-end gap-[13px] w-[39px] overflow-x-visible"
      onMouseLeave={handleMouseLeave}
      onMouseEnter={handleMouseEnter}
    >
      <button
        onMouseMove={() => setHoverd(true)}
        onMouseLeave={() => setHoverd(false)}
        className="transition-all cursor-pointer flex items-center justify-center w-[39px] h-[39px] rounded-[5px] "
        style={{
          backgroundColor: hoverd || show ? "#FFF" : "",
        }}
      >
        {/* <svg
          style={{
            transform: hoverd || show ? "rotate(45deg)" : "",
            transition: "0.3s",
          }}
          width="22"
          height="22"
          viewBox="0 0 22 22"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M10.2202 0.505859H11.7782C12.1909 0.505859 12.498 0.809748 12.498 1.22405V3.07812C12.4996 3.41404 12.7236 3.70829 13.0467 3.79787C13.6066 3.95464 14.1472 4.17868 14.6559 4.46022C14.9487 4.62178 15.3118 4.57223 15.5485 4.33388L16.8522 3.03008C16.918 2.96087 16.9971 2.90586 17.0848 2.8682C17.1726 2.83054 17.267 2.81099 17.3625 2.81099C17.458 2.81099 17.5524 2.83054 17.6402 2.8682C17.7279 2.90586 17.807 2.96087 17.8728 3.03008L18.9733 4.13236C19.0423 4.1981 19.0972 4.27696 19.1347 4.36454C19.1722 4.45211 19.1916 4.54655 19.1916 4.64182C19.1916 4.73709 19.1722 4.83133 19.1347 4.9189C19.0972 5.00648 19.0423 5.08554 18.9733 5.15127L17.6616 6.46132C17.5463 6.57754 17.4721 6.72839 17.4504 6.89071C17.4288 7.05303 17.4608 7.21792 17.5417 7.36033C17.8264 7.86581 18.0519 8.40321 18.2135 8.96308C18.3047 9.28301 18.6006 9.50698 18.9365 9.50378H20.7793C20.8744 9.50159 20.969 9.51876 21.0573 9.55416C21.1457 9.58956 21.2259 9.6425 21.2932 9.70979C21.3605 9.77707 21.4134 9.85734 21.4488 9.94567C21.4842 10.034 21.5013 10.1286 21.4991 10.2237V11.7833C21.5013 11.8785 21.4842 11.9731 21.4488 12.0614C21.4134 12.1497 21.3605 12.2298 21.2932 12.2971C21.2259 12.3644 21.1457 12.4173 21.0573 12.4527C20.969 12.4881 20.8744 12.5053 20.7793 12.5031H18.9269C18.591 12.5031 18.2951 12.7271 18.2039 13.0518C18.0471 13.6117 17.8264 14.1507 17.5449 14.6594C17.4658 14.8018 17.4352 14.9662 17.4577 15.1275C17.4802 15.2888 17.5546 15.4383 17.6696 15.5536L18.9733 16.8574C19.0423 16.9231 19.0972 17.0021 19.1347 17.0897C19.1722 17.1773 19.1916 17.2715 19.1916 17.3668C19.1916 17.4621 19.1722 17.5563 19.1347 17.6439C19.0972 17.7315 19.0423 17.8105 18.9733 17.8763L17.8728 18.9783C17.807 19.0476 17.7279 19.1028 17.6402 19.1404C17.5524 19.1781 17.458 19.1974 17.3625 19.1974C17.267 19.1974 17.1726 19.1781 17.0848 19.1404C16.9971 19.1028 16.918 19.0476 16.8522 18.9783L15.5437 17.6683C15.4278 17.552 15.2769 17.4771 15.1142 17.4549C14.9515 17.4326 14.786 17.4642 14.6431 17.5451C14.1372 17.8303 13.5999 18.0558 13.0419 18.217C12.8854 18.2618 12.7478 18.3562 12.6497 18.4861C12.5516 18.6159 12.4983 18.774 12.498 18.9368V20.7828C12.5002 20.8779 12.4831 20.9725 12.4477 21.0609C12.4123 21.1492 12.3593 21.2295 12.2921 21.2968C12.2248 21.364 12.1446 21.417 12.0562 21.4524C11.9679 21.4878 11.8733 21.5048 11.7782 21.5026H10.2202C10.125 21.5048 10.0304 21.4878 9.94212 21.4524C9.85379 21.417 9.77357 21.364 9.70628 21.2968C9.639 21.2295 9.58606 21.1492 9.55066 21.0609C9.51526 20.9725 9.49813 20.8779 9.50032 20.7828V18.9305C9.49872 18.5946 9.27477 18.3001 8.95165 18.2106C8.39145 18.0541 7.8514 17.833 7.34242 17.5515C7.2003 17.4729 7.03653 17.4424 6.87563 17.4646C6.71472 17.4868 6.56533 17.5605 6.44983 17.6747L5.14613 18.9783C5.08037 19.0476 5.00123 19.1028 4.9135 19.1404C4.82578 19.1781 4.73131 19.1974 4.63584 19.1974C4.54038 19.1974 4.44591 19.1781 4.35818 19.1404C4.27046 19.1028 4.19132 19.0476 4.12556 18.9783L3.02502 17.8747C2.95569 17.8093 2.90045 17.7306 2.86269 17.6431C2.82493 17.5556 2.80545 17.4613 2.80545 17.366C2.80545 17.2707 2.82493 17.1764 2.86269 17.0889C2.90045 17.0015 2.95569 16.9227 3.02502 16.8574L4.33191 15.5504C4.44732 15.435 4.52195 15.285 4.54447 15.1234C4.56698 14.9617 4.53616 14.7973 4.45669 14.6547C4.17279 14.1471 3.94894 13.6081 3.78964 13.0487C3.74465 12.8914 3.64951 12.7532 3.5187 12.655C3.38788 12.5568 3.22857 12.5039 3.06501 12.5046H1.22063C1.12537 12.5068 1.03065 12.4898 0.942216 12.4543C0.853783 12.4188 0.77348 12.3657 0.706174 12.2982C0.638867 12.2308 0.585959 12.1503 0.550657 12.0618C0.515355 11.9733 0.498394 11.8786 0.500801 11.7833V10.2253C0.497952 10.1298 0.514587 10.0346 0.549691 9.94567C0.584796 9.85678 0.637634 9.77602 0.704987 9.70822C0.772339 9.64042 0.852793 9.58712 0.941446 9.55142C1.0301 9.51573 1.12509 9.49844 1.22063 9.50065H3.06981C3.40573 9.50225 3.70166 9.27996 3.79444 8.95683C3.9512 8.39696 4.17035 7.85628 4.45349 7.3492C4.53256 7.20631 4.56286 7.04145 4.53976 6.87978C4.51666 6.7181 4.44144 6.56835 4.32552 6.45331L3.02342 5.15127C2.95445 5.08554 2.89955 5.00648 2.86204 4.9189C2.82453 4.83133 2.80519 4.73709 2.80519 4.64182C2.80519 4.54655 2.82453 4.45211 2.86204 4.36454C2.89955 4.27696 2.95445 4.1981 3.02342 4.13236L4.12396 3.03008C4.18972 2.96087 4.26886 2.90586 4.35659 2.8682C4.44431 2.83054 4.53878 2.81099 4.63424 2.81099C4.72971 2.81099 4.82418 2.83054 4.9119 2.8682C4.99963 2.90586 5.07877 2.96087 5.14453 3.03008L6.45302 4.34013C6.69137 4.57687 7.05768 4.6281 7.34882 4.46334C7.85576 4.17793 8.39419 3.95259 8.95325 3.79162C9.10971 3.74686 9.24737 3.65239 9.34548 3.52254C9.44358 3.3927 9.4968 3.23441 9.49712 3.07167V1.22249C9.49712 0.809786 9.80585 0.505859 10.217 0.505859H10.2202ZM10.9992 6.50447C9.80667 6.50743 8.66386 6.98242 7.82063 7.82565C6.9774 8.66888 6.50237 9.81171 6.49941 11.0042C6.50237 12.1967 6.9774 13.3395 7.82063 14.1828C8.66386 15.026 9.80667 15.501 10.9992 15.504C12.192 15.501 13.3351 15.0261 14.1789 14.183C15.0226 13.3398 15.4983 12.197 15.5021 11.0042C15.4983 9.81142 15.0226 8.66859 14.1789 7.82546C13.3351 6.98232 12.192 6.50742 10.9992 6.50447ZM10.9992 8.00491C12.6644 8.00491 14.0001 9.339 14.0001 11.0042C14.0016 11.3986 13.9249 11.7895 13.7746 12.1541C13.6243 12.5188 13.4033 12.8501 13.1243 13.1289C12.8454 13.4077 12.5139 13.6287 12.1492 13.7788C11.7845 13.9289 11.3936 14.0052 10.9992 14.0035C10.6049 14.005 10.2142 13.9286 9.84964 13.7784C9.48508 13.6282 9.15385 13.4071 8.87504 13.1283C8.59624 12.8495 8.37537 12.5183 8.22516 12.1538C8.07495 11.7892 7.99839 11.3985 7.99987 11.0042C7.99987 9.339 9.33396 8.00491 10.9992 8.00491Z"
            fill={`${hoverd || show ? "#BEDCFF" : "#E0E3E9"}`}
          />
          <circle
            cx="11"
            cy="11"
            r="3"
            fill={` ${hoverd || show ? "#00A7E1" : "#99A1B7"}`}
          />
        </svg> */}
        <svg
          style={{
            transform: hoverd || show ? "rotate(45deg)" : "",
            transition: "0.3s",
          }}
          fill={` ${hoverd || show ? "#00A7E1" : "#99A1B7"}`}
          height="20"
          width="20"
          version="1.1"
          id="Capa_1"
          xmlns="http://www.w3.org/2000/svg"
          xmlnsXlink="http://www.w3.org/1999/xlink"
          viewBox="0 0 482.568 482.568"
          xmlSpace="preserve"
        >
          <g>
            <g>
              <path
                d="M116.993,203.218c13.4-1.8,26.8,2.8,36.3,12.3l24,24l22.7-22.6l-32.8-32.7c-5.1-5.1-5.1-13.4,0-18.5s13.4-5.1,18.5,0
			l32.8,32.8l22.7-22.6l-24.1-24.1c-9.5-9.5-14.1-23-12.3-36.3c4-30.4-5.7-62.2-29-85.6c-23.8-23.8-56.4-33.4-87.3-28.8
			c-4.9,0.7-6.9,6.8-3.4,10.3l30.9,30.9c14.7,14.7,14.7,38.5,0,53.1l-19,19c-14.7,14.7-38.5,14.7-53.1,0l-31-30.9
			c-3.5-3.5-9.5-1.5-10.3,3.4c-4.6,30.9,5,63.5,28.8,87.3C54.793,197.518,86.593,207.218,116.993,203.218z"
              />
              <path
                d="M309.193,243.918l-22.7,22.6l134.8,134.8c5.1,5.1,5.1,13.4,0,18.5s-13.4,5.1-18.5,0l-134.8-134.8l-22.7,22.6l138.9,138.9
			c17.6,17.6,46.1,17.5,63.7-0.1s17.6-46.1,0.1-63.7L309.193,243.918z"
              />
              <path
                d="M361.293,153.918h59.9l59.9-119.7l-29.9-29.9l-119.8,59.8v59.9l-162.8,162.3l-29.3-29.2l-118,118
			c-24.6,24.6-24.6,64.4,0,89s64.4,24.6,89,0l118-118l-29.9-29.9L361.293,153.918z"
              />
            </g>
          </g>
        </svg>
        {/* <img src={newSettingsHeaderIcon} alt="icon" width={24} /> */}
      </button>

      <div
        className={`${
          show ? "popup_effect" : "hidden"
        } transition-all   rounded-lg main-shadow w-[450px] z-20  px-0 py-1 bg-white`}
      >
        <div className="px-3 py-3 w-full">
          <h4 className="text-[#333232] font-semibold text-base mb-0 pl-2 pb-2  border-[#eaeaea]">
            {title ? title : "Configuration"}
          </h4>
          <div className="flex items-start justify-between">
            <ul className="mt-0 w-full">
              {data?.map(
                (item, i) =>
                  item?.isActive && (
                    <li
                      onClick={handleClose}
                      key={item.id}
                      className={` ${
                        data?.length - 1 !== i && "border-b border-[#eee]"
                      }  py-3 transition-all hover:bg-[#f8f8f8b6] px-2 rounded-sm w-full`}
                    >
                      {item?.isSystem ? (
                        <Link
                          to={item?.url}
                          className="flex items-center gap-3"
                          onClick={handleClose}
                        >
                          <span className="w-[25px] h-[25px]">
                            {item?.icon ? (
                              <img
                                src={item?.icon}
                                alt=""
                                className="max-w-[25px] max-h-[25px]"
                              />
                            ) : null}
                          </span>

                          <div>
                            <h5 className="text-[13px] text-[#333232] font-medium">
                              {item?.transMenuValue || item?.title}
                            </h5>
                            <p className="text-[11px] text-[#A3A3A3] font-normal mt-[-3px] leading-[15px]">
                              {item?.description ? item?.description : ""}
                            </p>
                          </div>
                        </Link>
                      ) : (
                        <a
                          href={item?.url}
                          className="flex items-center gap-3"
                          onClick={handleClose}
                        >
                          <span className="w-[25px] h-[25px]">
                            {item?.icon ? (
                              <img
                                src={item?.icon}
                                alt=""
                                className="max-w-[25px] max-h-[25px]"
                              />
                            ) : null}
                          </span>

                          <div>
                            <h5 className="text-[14px] text-[#333232] font-normal">
                              {item?.transMenuValue}
                            </h5>
                            <p className="text-[12px] text-[#A3A3A3] font-normal mt-[-3px]">
                              {item?.description ? item?.description : ""}
                            </p>
                          </div>
                        </a>
                      )}
                    </li>
                  )
              )}
            </ul>
            {/* {settingsImg ? <img src={settingsImg} alt="img" /> : null} */}
          </div>
        </div>
      </div>
    </div>
  );
};

export default SettingsPopup;
